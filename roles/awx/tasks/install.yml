---
# Based on https://github.com/ansible/awx/blob/1.0.3/installer/openshift/tasks/main.yml

- name: Ensure AWX Project Exists
  oc_project:
    name: "{{ awx_project }}"

# This secret is created by postgresql-persistent template
- name: Read Existing Postgres Secret
  oc_secret:
    state: list
    namespace: "{{ awx_project }}"
    name: postgresql
    decode: true
  register: awx_postgres_secret
  no_log: true

- name: Get or Generate AWX Postgres Password
  set_fact:
    pg_password: "{{ awx_postgres_secret.results.decoded['database-password'] | default(16 | lib_utils_oo_random_word) }}"
  no_log: true

- name: Deploy and Activate Postgres
  # Note: NAMESPACE param is where to look for postgresql ImageStream.
  shell: >-
    {{ openshift_client_binary }} project {{ awx_project }};
    {{ openshift_client_binary }} process -n openshift postgresql-persistent
    --param MEMORY_LIMIT=512Mi
    --param NAMESPACE=openshift
    --param DATABASE_SERVICE_NAME=postgresql
    --param POSTGRESQL_USER=awx
    --param POSTGRESQL_PASSWORD={{ pg_password }}
    --param POSTGRESQL_DATABASE=awx
    --param VOLUME_CAPACITY=5Gi
    --param POSTGRESQL_VERSION=9.5
    | {{ openshift_client_binary }} apply -f -
  register: apply
  changed_when: "'created' in apply.stdout or 'configured' in apply.stdout"

- name: Create temp directory for templates
  command: mktemp -td awx-ansible-XXXXXX
  register: mktemp
  changed_when: False

- name: Copy files to temp directory
  copy:
    src: "{{ item }}"
    dest: "{{ mktemp.stdout }}/{{ item }}"
  with_items:
  - awx-deployment.yml
  - settings.py

- name: Read Existing AWX ConfigMap
  oc_configmap:
    state: list
    namespace: "{{ awx_project }}"
    name: awx-config
  register: awx_config
  no_log: true

- name: Get or Generate AWX secret_key
  set_fact:
    awx_secret_key: "{{ (awx_config.results.results[0].data | default({})).secret_key | default(16 | lib_utils_oo_random_word) }}"
  no_log: true

- name: AWX ConfigMap
  oc_configmap:
    name: awx-config
    namespace: "{{ awx_project }}"
    from_literal:
      secret_key: "{{ awx_secret_key }}"
    from_file:
      awx_settings: "{{ mktemp.stdout }}/settings.py"
  no_log: true

- name: Read Existing AWX Secret
  oc_secret:
    state: list
    namespace: "{{ awx_project }}"
    name: awx
    decode: true
  register: awx_secret
  no_log: true

- name: Get or Generate AWX admin Password
  set_fact:
    awx_admin_password: "{{ awx_secret.results.decoded['admin_password'] | default(16 | lib_utils_oo_random_word) }}"
  no_log: true

- name: Apply the AWX Deployment Template
  shell: >-
    {{ openshift_client_binary }} process -f {{ mktemp.stdout }}/awx-deployment.yml
    --param NAMESPACE={{ awx_project }}
    --param AWX_WEB_IMAGE={{ awx_web_openshift_image }}
    --param AWX_TASK_IMAGE={{ awx_task_openshift_image }}
    --param AWX_ADMIN_PASSWORD={{ awx_admin_password }}
    | {{ openshift_client_binary }} apply -f -
  register: apply
  changed_when: "'created' in apply.stdout or 'configured' in apply.stdout"

- name: Delete temp directory
  file:
    name: "{{ mktemp.stdout }}"
    state: absent
  changed_when: False
